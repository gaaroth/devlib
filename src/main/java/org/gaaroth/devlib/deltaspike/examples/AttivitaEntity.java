/*
 * Created on 5 feb 2016 ( Time 15:07:40 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.gaaroth.devlib.deltaspike.examples;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Persistent class for entity stored in table "attivita"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="attivita", catalog="intranet" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AttivitaEntity.countAll", query="SELECT COUNT(x) FROM AttivitaEntity x" )
} )
public class AttivitaEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.IDENTITY)
    @Column(name="id_attivita", nullable=false)
    private Long       idAttivita   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_ora_inserimento", nullable=false)
    private Date       dataOraInserimento ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_ora_scadenza")
    private Date       dataOraScadenza ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_ora_completamento")
    private Date       dataOraCompletamento ;

    @Column(name="descrizione")
    private String     descrizione  ;

    @Column(name="report")
    private String     report       ;

    @Column(name="cod_conto_metodo", length=16)
    private String     codContoMetodo ;

    @Column(name="id_rubrica_arxivar")
    private Integer    idRubricaArxivar ;

    @Column(name="descrizione_anagrafica_esterna", length=512)
    private String     descrizioneAnagraficaEsterna ;

    @Column(name="tutto_giorno")
    private Boolean    tuttoGiorno  ;

    @Column(name="chiudi_a_scadenza")
    private Boolean    chiudiAScadenza ;

	// "idUtente" (column "id_utente") is not defined by itself because used as FK in a link 
	// "idTipoAttivita" (column "id_tipo_attivita") is not defined by itself because used as FK in a link 
	// "idStatoAttivita" (column "id_stato_attivita") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AttivitaEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdAttivita( Long idAttivita ) {
        this.idAttivita = idAttivita ;
    }
    public Long getIdAttivita() {
        return this.idAttivita;
    }
	public static String ID_ATTIVITA = "idAttivita";


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : data_ora_inserimento ( DATETIME ) 
    public void setDataOraInserimento( Date dataOraInserimento ) {
        this.dataOraInserimento = dataOraInserimento;
    }
    public Date getDataOraInserimento() {
        return this.dataOraInserimento;
    }
	public static String DATA_ORA_INSERIMENTO = "dataOraInserimento";

    //--- DATABASE MAPPING : data_ora_scadenza ( DATETIME ) 
    public void setDataOraScadenza( Date dataOraScadenza ) {
        this.dataOraScadenza = dataOraScadenza;
    }
    public Date getDataOraScadenza() {
        return this.dataOraScadenza;
    }
	public static String DATA_ORA_SCADENZA = "dataOraScadenza";

    //--- DATABASE MAPPING : data_ora_completamento ( DATETIME ) 
    public void setDataOraCompletamento( Date dataOraCompletamento ) {
        this.dataOraCompletamento = dataOraCompletamento;
    }
    public Date getDataOraCompletamento() {
        return this.dataOraCompletamento;
    }
	public static String DATA_ORA_COMPLETAMENTO = "dataOraCompletamento";

    //--- DATABASE MAPPING : descrizione ( TEXT ) 
    public void setDescrizione( String descrizione ) {
        this.descrizione = descrizione;
    }
    public String getDescrizione() {
        return this.descrizione;
    }
	public static String DESCRIZIONE = "descrizione";

    //--- DATABASE MAPPING : report ( TEXT ) 
    public void setReport( String report ) {
        this.report = report;
    }
    public String getReport() {
        return this.report;
    }
	public static String REPORT = "report";

    //--- DATABASE MAPPING : cod_conto_metodo ( VARCHAR ) 
    public void setCodContoMetodo( String codContoMetodo ) {
        this.codContoMetodo = codContoMetodo;
    }
    public String getCodContoMetodo() {
        return this.codContoMetodo;
    }
	public static String COD_CONTO_METODO = "codContoMetodo";

    //--- DATABASE MAPPING : id_rubrica_arxivar ( INT ) 
    public void setIdRubricaArxivar( Integer idRubricaArxivar ) {
        this.idRubricaArxivar = idRubricaArxivar;
    }
    public Integer getIdRubricaArxivar() {
        return this.idRubricaArxivar;
    }
	public static String ID_RUBRICA_ARXIVAR = "idRubricaArxivar";

    //--- DATABASE MAPPING : descrizione_anagrafica_esterna ( VARCHAR ) 
    public void setDescrizioneAnagraficaEsterna( String descrizioneAnagraficaEsterna ) {
        this.descrizioneAnagraficaEsterna = descrizioneAnagraficaEsterna;
    }
    public String getDescrizioneAnagraficaEsterna() {
        return this.descrizioneAnagraficaEsterna;
    }
	public static String DESCRIZIONE_ANAGRAFICA_ESTERNA = "descrizioneAnagraficaEsterna";

    //--- DATABASE MAPPING : tutto_giorno ( BIT ) 
    public void setTuttoGiorno( Boolean tuttoGiorno ) {
        this.tuttoGiorno = tuttoGiorno;
    }
    public Boolean getTuttoGiorno() {
        return this.tuttoGiorno;
    }
	public static String TUTTO_GIORNO = "tuttoGiorno";

    //--- DATABASE MAPPING : chiudi_a_scadenza ( BIT ) 
    public void setChiudiAScadenza( Boolean chiudiAScadenza ) {
        this.chiudiAScadenza = chiudiAScadenza;
    }
    public Boolean getChiudiAScadenza() {
        return this.chiudiAScadenza;
    }
	public static String CHIUDI_A_SCADENZA = "chiudiAScadenza";


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idAttivita);
        sb.append("]:"); 
        sb.append(dataOraInserimento);
        sb.append("|");
        sb.append(dataOraScadenza);
        sb.append("|");
        sb.append(dataOraCompletamento);
        // attribute 'descrizione' not usable (type = String Long Text)
        // attribute 'report' not usable (type = String Long Text)
        sb.append("|");
        sb.append(codContoMetodo);
        sb.append("|");
        sb.append(idRubricaArxivar);
        sb.append("|");
        sb.append(descrizioneAnagraficaEsterna);
        sb.append("|");
        sb.append(tuttoGiorno);
        sb.append("|");
        sb.append(chiudiAScadenza);
        return sb.toString(); 
    } 

}
